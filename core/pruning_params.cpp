#include <cassert>
#include <vector>

#include "types.hpp"

/**
 * The following pruning parameters are taken by using the Pruner from [1],
 * on bases that are preprocessed with SeysenLLL's DeepLLL (slope -0.44)
 * Genrated using the script:
 * 

from fpylll import *
for beta in range(2, 66, 2):    profile = [2**(-.044 * 2 * i) for i in range(beta)]
    pr = Pruning.run(1, 2.0**40, [profile], 0.51, flags=Pruning.ZEALOUS, float_type="ld")
    coeffs = ", ".join([f"{x:.4f}" for x in pr.coefficients])
    print("{", coeffs, f"}}, // BKZ-{beta}, p={pr.expectation:.6f}")


 */
const std::vector<FT> pruning_params[64/2 + 1] = {
    {}, // dummy values
{ 1.0000, 0.0001 }, // BKZ-2, p=1.000000
{ 1.0000, 0.0256, 0.0247, 0.0242 }, // BKZ-4, p=0.510947
{ 1.0000, 0.1667, 0.1650, 0.1619, 0.1588, 0.1557 }, // BKZ-6, p=0.512388
{ 1.0000, 0.2819, 0.2812, 0.2812, 0.2812, 0.2812, 0.2812, 0.2812 }, // BKZ-8, p=0.511269
{ 1.0000, 0.3803, 0.3782, 0.3782, 0.3782, 0.3782, 0.3782, 0.3782, 0.3782, 0.3782 }, // BKZ-10, p=0.510293
{ 1.0000, 0.4667, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661, 0.4661 }, // BKZ-12, p=0.511269
{ 1.0000, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5286, 0.5186 }, // BKZ-14, p=0.511238
{ 1.0000, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5750, 0.5680 }, // BKZ-16, p=0.510755
{ 1.0000, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6131, 0.6099 }, // BKZ-18, p=0.510384
{ 1.0000, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6528, 0.6428 }, // BKZ-20, p=0.511256
{ 1.0000, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6816, 0.6716 }, // BKZ-22, p=0.511379
{ 1.0000, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.7031, 0.6959 }, // BKZ-24, p=0.510959
{ 1.0000, 0.7183, 0.7183, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182, 0.7182 }, // BKZ-26, p=0.510004
{ 1.0000, 0.9223, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915, 0.8915 }, // BKZ-28, p=0.580764
{ 1.0000, 0.9999, 0.9980, 0.9651, 0.9322, 0.8993, 0.8564, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341, 0.8341 }, // BKZ-30, p=0.518477
{ 1.0000, 0.9999, 0.9999, 0.9821, 0.9518, 0.9218, 0.8792, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168, 0.8168 }, // BKZ-32, p=0.515503
{ 1.0000, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7855, 0.7791 }, // BKZ-34, p=0.511372
{ 1.0000, 0.9721, 0.9721, 0.9500, 0.9223, 0.8958, 0.8640, 0.8367, 0.8017, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904, 0.7904 }, // BKZ-36, p=0.510018
{ 1.0000, 0.9986, 0.9986, 0.9847, 0.9591, 0.9371, 0.9034, 0.8737, 0.8351, 0.8085, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007, 0.8007 }, // BKZ-38, p=0.510097
{ 1.0000, 0.9971, 0.9971, 0.9967, 0.9666, 0.9442, 0.9094, 0.8726, 0.8258, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098, 0.8098 }, // BKZ-40, p=0.510830
{ 1.0000, 0.9992, 0.9992, 0.9858, 0.9642, 0.9450, 0.9151, 0.8884, 0.8539, 0.8301, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182, 0.8182 }, // BKZ-42, p=0.512694
{ 1.0000, 0.9998, 0.9854, 0.9735, 0.9523, 0.9523, 0.9449, 0.9380, 0.9063, 0.8868, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257, 0.8257 }, // BKZ-44, p=0.511422
{ 1.0000, 0.9272, 0.9267, 0.9267, 0.8903, 0.8903, 0.8808, 0.8708, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328, 0.8328 }, // BKZ-46, p=0.514446
{ 1.0000, 0.8410, 0.8410, 0.8410, 0.8410, 0.8410, 0.8410, 0.8410, 0.8410, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392, 0.8392 }, // BKZ-48, p=0.510417
{ 1.0000, 0.8584, 0.8584, 0.8584, 0.8584, 0.8584, 0.8584, 0.8584, 0.8484, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451, 0.8451 }, // BKZ-50, p=0.514378
{ 1.0000, 0.8590, 0.8586, 0.8565, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.8508, 0.7932, 0.7932, 0.7724, 0.7724, 0.7416, 0.7416, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291, 0.7291 }, // BKZ-52, p=0.510196
{ 1.0000, 0.9999, 0.9999, 0.9999, 0.9828, 0.9670, 0.9458, 0.9190, 0.8848, 0.8621, 0.8621, 0.8621, 0.8621, 0.8621, 0.8621, 0.8621, 0.8425, 0.8425, 0.7997, 0.7997, 0.7333, 0.7333, 0.7043, 0.7043, 0.6762, 0.6762, 0.6491, 0.6491, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381, 0.6381 }, // BKZ-54, p=0.510167
{ 1.0000, 0.9979, 0.9979, 0.9977, 0.9759, 0.9603, 0.9301, 0.9090, 0.9053, 0.9053, 0.9053, 0.9053, 0.9053, 0.9053, 0.8857, 0.8857, 0.8273, 0.8273, 0.7792, 0.7792, 0.7174, 0.7174, 0.6904, 0.6904, 0.6495, 0.6495, 0.6248, 0.6248, 0.6009, 0.6009, 0.6009, 0.6009, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950, 0.5950 }, // BKZ-56, p=0.513273
{ 1.0000, 1.0000, 0.9805, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9800, 0.9233, 0.9233, 0.8565, 0.8565, 0.7945, 0.7945, 0.7520, 0.7520, 0.7119, 0.7119, 0.6738, 0.6738, 0.6378, 0.6378, 0.6161, 0.6161, 0.5951, 0.5951, 0.5951, 0.5951, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899, 0.5899 }, // BKZ-58, p=0.510341
{ 1.0000, 1.0000, 1.0000, 1.0000, 0.9999, 0.9999, 0.9886, 0.9886, 0.9877, 0.9877, 0.9800, 0.9800, 0.9450, 0.9450, 0.8879, 0.8766, 0.8362, 0.8162, 0.7855, 0.7558, 0.7282, 0.7028, 0.6793, 0.6624, 0.6421, 0.6270, 0.6082, 0.5995, 0.5895, 0.5820, 0.5653, 0.5489, 0.5348, 0.5348, 0.5282, 0.5281, 0.5280, 0.5279, 0.5278, 0.5278, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277, 0.5277 }, // BKZ-60, p=0.510267
{ 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9918, 0.9800, 0.9800, 0.9395, 0.9190, 0.8977, 0.8748, 0.8499, 0.8239, 0.7984, 0.7750, 0.7506, 0.7259, 0.7024, 0.6796, 0.6478, 0.6370, 0.6077, 0.5999, 0.5979, 0.5979, 0.5876, 0.5772, 0.5574, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486, 0.5486 }, // BKZ-62, p=0.509894
{ 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 1.0000, 0.9971, 0.9971, 0.9808, 0.9800, 0.9541, 0.9467, 0.9172, 0.9093, 0.8760, 0.8688, 0.8331, 0.8271, 0.7906, 0.7859, 0.7495, 0.7459, 0.7107, 0.7078, 0.6744, 0.6721, 0.6408, 0.6383, 0.6092, 0.6053, 0.5814, 0.5770, 0.5556, 0.5509, 0.5323, 0.5268, 0.5089, 0.5061, 0.4902, 0.4889, 0.4782, 0.4774, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670, 0.4670 }, // BKZ-64, p=0.509532
};

const FT* get_pruning_coefficients(const int block_size) {
	assert(2 <= block_size && block_size <= 64);
	return &pruning_params[(block_size + 1) / 2][0];
}
